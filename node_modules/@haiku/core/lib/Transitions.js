"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KeyframeUtils_1 = require("./helpers/KeyframeUtils");
var Interpolate_1 = require("./Interpolate");
// 0:    { value: { ... } }
// 2500: { value: { ... } }
// 5000: { value: { ... } }
var getKeyframesList = function (sorted, nowValue) {
    for (var i = 0; i < sorted.length; i++) {
        var j = i + 1;
        var current = sorted[i];
        var next = sorted[j];
        if (current <= nowValue) {
            if (next > nowValue) {
                return [current, next];
            }
            if (j >= sorted.length) {
                return [current];
            }
        }
    }
};
exports.calculateValue = function (keyframeGroup, nowValue, sortedKeyframes) {
    if (!sortedKeyframes) {
        // tslint:disable-next-line:no-parameter-reassignment
        sortedKeyframes = KeyframeUtils_1.getSortedKeyframes(keyframeGroup);
    }
    var keyframesList = getKeyframesList(sortedKeyframes, nowValue);
    if (!keyframesList || keyframesList.length < 1) {
        return;
    }
    var currentKeyframe = keyframesList[0];
    var currentTransition = keyframeGroup[currentKeyframe];
    var nextKeyframe = keyframesList[1];
    var nextTransition = keyframeGroup[nextKeyframe];
    var finalValue = getTransitionValue(currentKeyframe, currentTransition, nextKeyframe, nextTransition, nowValue);
    return finalValue;
};
var getTransitionValue = function (currentKeyframe, currentTransition, nextKeyframe, nextTransition, nowValue) {
    var currentValue = currentTransition.value;
    if (!currentTransition.curve) {
        return currentValue;
    } // No curve indicates immediate transition
    if (!nextTransition) {
        return currentValue;
    } // We have gone past the final transition
    var finalValue = Interpolate_1.interpolate(nowValue, currentTransition.curve, currentKeyframe, nextKeyframe, currentValue, nextTransition.value);
    return finalValue;
};
//# sourceMappingURL=Transitions.js.map