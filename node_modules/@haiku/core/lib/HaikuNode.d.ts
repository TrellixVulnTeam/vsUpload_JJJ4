/**
 * Copyright (c) Haiku 2016-2018. All rights reserved.
 */
import { BytecodeNode, BytecodeNodeAttributes, HaikuBytecode, MaybeBytecodeNode } from './api';
export declare const parseAttrSelector: (selector: any) => {
    key: string;
    operator: string;
    value: string;
    insensitive: boolean;
};
export declare const cssMatchByAttribute: (node: any, attrKeyToMatch: any, attrOperator: any, attrValueToMatch: any, options: any) => boolean;
export declare const cssMatchByClass: (node: any, className: any, options: any) => boolean;
export declare const cssMatchByHaiku: (node: any, haikuString: any, options: any) => boolean;
export declare const cssMatchById: (node: any, id: any, options: any) => boolean;
export declare const cssMatchByTagName: (node: any, tagName: any, options: any) => boolean;
export declare const cssMatchOne: (node: any, piece: any, options: any) => boolean;
export declare const cssQueryList: (list: any, query: any, options: any) => any[];
export declare const cssQueryTree: (node: any, query: any, options: any) => any[];
export declare const manaFlattenTree: (node: any, options: any, unique?: boolean, list?: any[], depth?: number, index?: number) => any;
export declare type ManaTreeVisitor = (elementName: string | HaikuBytecode, attributes: BytecodeNodeAttributes, children: (string | BytecodeNode)[], mana: BytecodeNode, locator: string, parent: MaybeBytecodeNode, index: number) => void;
export declare type BytecodeNodeVisitor = (mana: BytecodeNode) => void;
export declare const visitManaTree: (locator: string, mana: string | BytecodeNode, visitor: ManaTreeVisitor, parent: BytecodeNode, index: number) => void;
export declare const visit: (mana: BytecodeNode, visitor: (node: BytecodeNode, parent?: BytecodeNode) => void, parent?: BytecodeNode) => void;
export declare const ascend: (mana: any, ascender: any) => void;
export declare const cloneNodeShallow: (node: any) => any;
export declare const cloneAttributes: (attributes: any) => any;
