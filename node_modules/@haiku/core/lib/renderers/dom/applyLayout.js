"use strict";
/**
 * Copyright (c) Haiku 2016-2018. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var applyCssLayout_1 = require("../../layout/applyCssLayout");
var modernizr_1 = require("../../vendor/modernizr");
var getWindowsBrowserVersion_1 = require("./getWindowsBrowserVersion");
var isEdge_1 = require("./isEdge");
var isIE_1 = require("./isIE");
var isMobile_1 = require("./isMobile");
var isTextNode_1 = require("./isTextNode");
var safeWindow = typeof window !== 'undefined' && window;
var PLATFORM_INFO = {
    hasWindow: !!safeWindow,
    isMobile: isMobile_1.default(safeWindow),
    isIE: isIE_1.default(safeWindow),
    isEdge: isEdge_1.default(safeWindow),
    windowsBrowserVersion: getWindowsBrowserVersion_1.default(safeWindow),
    hasPreserve3d: modernizr_1.default.hasPreserve3d(safeWindow),
};
function applyLayout(domElement, virtualElement, component) {
    if (isTextNode_1.default(virtualElement)) {
        return domElement;
    }
    if (virtualElement.layout) {
        var computedLayout = virtualElement.layout.computed;
        // No computed layout means the el is not shown
        if (!computedLayout) {
            if (domElement.style.display !== 'none') {
                domElement.style.display = 'none';
            }
        }
        else {
            if (domElement.style.display !== 'block') {
                domElement.style.display = 'block';
            }
            component.config.platform = PLATFORM_INFO;
            applyCssLayout_1.default(domElement, virtualElement, virtualElement.layout, computedLayout, component);
        }
    }
    return domElement;
}
exports.default = applyLayout;
//# sourceMappingURL=applyLayout.js.map