"use strict";
/**
 * Copyright (c) Haiku 2016-2018. All rights reserved.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var ReservedWords_1 = require("./ReservedWords");
var WRAP_PREFIX = '_$';
var WRAP_SUFFIX = '$_';
var VALIDITY_REGEX = /(^[^a-zA-Z_\$])|([^a-zA-Z_\$0-9])/g;
function charReplacer(c) {
    return WRAP_PREFIX + c.charCodeAt(0) + WRAP_SUFFIX;
}
function isInt(value) {
    return !isNaN(parseInt(value, 10)) && parseInt(value, 10) === parseFloat(value);
}
/**
 * @function toIdentifier
 * @description Converts arbitrary text into a valid JavaScript identifier.
 * This operation should be reversible.
 */
function toIdentifier(str) {
    var out = str;
    out = out.replace(VALIDITY_REGEX, charReplacer);
    if (ReservedWords_1.default.WORDS[out]) {
        return "" + WRAP_PREFIX + out + WRAP_SUFFIX;
    }
    return out;
}
exports.toIdentifier = toIdentifier;
/**
 * @function toText
 * @description Inverse of toIdentifier
 */
function toText(str) {
    return str.replace(/_\$([a-zA-Z_0-9]+)\$_/g, function (full) {
        var part = full.slice(2, full.length - 2);
        // Ignore JavaScript keywords that we may have wrapped
        if (isInt(part)) {
            return String.fromCharCode(parseInt(part, 10));
        }
        return part;
    });
}
exports.toText = toText;
//# sourceMappingURL=JavaScriptIdentifier.js.map