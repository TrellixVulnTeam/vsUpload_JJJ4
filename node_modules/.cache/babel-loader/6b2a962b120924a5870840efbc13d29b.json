{"ast":null,"code":"var _jsxFileName = \"/Users/stephensheldon/Documents/Coding/React/react-router-portfolio/router-portfolio/src/components/title.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { gsap } from \"gsap\";\nimport SplitText from \"../utils/Split3.min\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Title = ({\n  lineContent,\n  lineContent2\n}) => {\n  _s();\n\n  let line1 = useRef(null);\n  let line2 = useRef(null);\n  const split = new SplitText(\"#header-text\", {\n    type: \"lines\",\n    linesClass: \"lineChildren\"\n  });\n  const splitParent = new SplitText(\"#header-text\", {\n    type: \"lines\",\n    linesClass: \"lineParent\"\n  });\n  useEffect(() => {\n    gsap.from(split.lines, 0.8, {\n      delay: 0.1,\n      ease: \"power3.out\",\n      y: 64,\n      stagger: {\n        amount: 0.15\n      }\n    });\n  }, split.lines);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    class: \"page-title\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: el => line1 = el,\n        className: \"line\",\n        children: lineContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"header-text\",\n        ref: el => line2 = el,\n        className: \"line\",\n        children: lineContent2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Title, \"4oiYK9UqVJ9ZSI/ucI6mvumtG8U=\");\n\n_c = Title;\nexport default Title;\n\nvar _c;\n\n$RefreshReg$(_c, \"Title\");","map":{"version":3,"sources":["/Users/stephensheldon/Documents/Coding/React/react-router-portfolio/router-portfolio/src/components/title.js"],"names":["React","useEffect","useRef","gsap","SplitText","Title","lineContent","lineContent2","line1","line2","split","type","linesClass","splitParent","from","lines","delay","ease","y","stagger","amount","el"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAAmC;AAAA;;AAC/C,MAAIC,KAAK,GAAGN,MAAM,CAAC,IAAD,CAAlB;AACA,MAAIO,KAAK,GAAGP,MAAM,CAAC,IAAD,CAAlB;AACA,QAAMQ,KAAK,GAAG,IAAIN,SAAJ,CAAc,cAAd,EAA8B;AAC1CO,IAAAA,IAAI,EAAE,OADoC;AAE1CC,IAAAA,UAAU,EAAE;AAF8B,GAA9B,CAAd;AAKA,QAAMC,WAAW,GAAG,IAAIT,SAAJ,CAAc,cAAd,EAA8B;AAChDO,IAAAA,IAAI,EAAE,OAD0C;AAEhDC,IAAAA,UAAU,EAAE;AAFoC,GAA9B,CAApB;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,IAAI,CAACW,IAAL,CAAUJ,KAAK,CAACK,KAAhB,EAAuB,GAAvB,EAA4B;AAC1BC,MAAAA,KAAK,EAAE,GADmB;AAE1BC,MAAAA,IAAI,EAAE,YAFoB;AAG1BC,MAAAA,CAAC,EAAE,EAHuB;AAI1BC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AADD;AAJiB,KAA5B;AAQD,GATQ,EASNV,KAAK,CAACK,KATA,CAAT;AAWA,sBACE;AAAI,IAAA,KAAK,EAAC,YAAV;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,GAAG,EAAGM,EAAD,IAASb,KAAK,GAAGa,EAA3B;AAAgC,QAAA,SAAS,EAAC,MAA1C;AAAA,kBACGf;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,EAAE,EAAC,aAAR;AAAsB,QAAA,GAAG,EAAGe,EAAD,IAASZ,KAAK,GAAGY,EAA5C;AAAiD,QAAA,SAAS,EAAC,MAA3D;AAAA,kBACGd;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAtCD;;GAAMF,K;;KAAAA,K;AAwCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { gsap } from \"gsap\";\nimport SplitText from \"../utils/Split3.min\";\n\nconst Title = ({ lineContent, lineContent2 }) => {\n  let line1 = useRef(null);\n  let line2 = useRef(null);\n  const split = new SplitText(\"#header-text\", {\n    type: \"lines\",\n    linesClass: \"lineChildren\",\n  });\n\n  const splitParent = new SplitText(\"#header-text\", {\n    type: \"lines\",\n    linesClass: \"lineParent\",\n  });\n\n  useEffect(() => {\n    gsap.from(split.lines, 0.8, {\n      delay: 0.1,\n      ease: \"power3.out\",\n      y: 64,\n      stagger: {\n        amount: 0.15,\n      },\n    });\n  }, split.lines);\n\n  return (\n    <h1 class=\"page-title\">\n      <div className=\"line-wrap\">\n        <div ref={(el) => (line1 = el)} className=\"line\">\n          {lineContent}\n        </div>\n      </div>\n      <div className=\"line-wrap\">\n        <div id=\"header-text\" ref={(el) => (line2 = el)} className=\"line\">\n          {lineContent2}\n        </div>\n      </div>\n    </h1>\n  );\n};\n\nexport default Title;\n"]},"metadata":{},"sourceType":"module"}