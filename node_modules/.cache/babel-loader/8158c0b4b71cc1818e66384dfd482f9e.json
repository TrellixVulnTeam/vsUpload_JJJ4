{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport gsap from \"gsap\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\nimport { useEffect } from \"react\";\nimport LocomotiveScroll from \"locomotive-scroll\";\nimport \"locomotive-scroll/src/locomotive-scroll.scss\";\ngsap.registerPlugin(ScrollTrigger);\nexport default function useLocoScroll(start) {\n  _s();\n\n  useEffect(() => {\n    if (!start) return;\n    let locoScroll = null;\n    const scrollEl = document.querySelector(\"#main-container\");\n    locoScroll = new LocomotiveScroll({\n      el: scrollEl,\n      smooth: true,\n      multiplier: 1,\n      class: \"is-reveal\"\n    });\n    locoScroll.on(\"scroll\", () => {\n      ScrollTrigger.update();\n    });\n    ScrollTrigger.scrollerProxy(scrollEl, {\n      scrollTop(value) {\n        if (locoScroll) {\n          return arguments.length ? locoScroll.scrollTo(value, 0, 0) : locoScroll.scroll.instance.scroll.y;\n        }\n\n        return null;\n      },\n\n      scrollLeft(value) {\n        if (locoScroll) {\n          return arguments.length ? locoScroll.scrollTo(value, 0, 0) : locoScroll.scroll.instance.scroll.x;\n        }\n\n        return null;\n      }\n\n    });\n\n    const lsUpdate = () => {\n      if (locoScroll) {\n        locoScroll.update();\n      }\n    };\n\n    ScrollTrigger.addEventListener(\"refresh\", lsUpdate);\n    ScrollTrigger.refresh();\n    return () => {\n      if (locoScroll) {\n        ScrollTrigger.removeEventListener(\"refresh\", lsUpdate);\n        locoScroll.destroy();\n        locoScroll = null;\n        console.log(\"Kill\", locoScroll);\n      }\n    };\n  }, [start]);\n}\n\n_s(useLocoScroll, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"sources":["/Users/stephensheldon/Documents/Coding/React/react-router-portfolio/router-portfolio/src/hooks/useLocoScroll.js"],"names":["gsap","ScrollTrigger","useEffect","LocomotiveScroll","registerPlugin","useLocoScroll","start","locoScroll","scrollEl","document","querySelector","el","smooth","multiplier","class","on","update","scrollerProxy","scrollTop","value","arguments","length","scrollTo","scroll","instance","y","scrollLeft","x","lsUpdate","addEventListener","refresh","removeEventListener","destroy","console","log"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,gBAAP,MAA6B,mBAA7B;AACA,OAAO,8CAAP;AAEAH,IAAI,CAACI,cAAL,CAAoBH,aAApB;AAEA,eAAe,SAASI,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC3CJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACI,KAAL,EAAY;AACZ,QAAIC,UAAU,GAAG,IAAjB;AAEA,UAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAAjB;AAEAH,IAAAA,UAAU,GAAG,IAAIJ,gBAAJ,CAAqB;AAChCQ,MAAAA,EAAE,EAAEH,QAD4B;AAEhCI,MAAAA,MAAM,EAAE,IAFwB;AAGhCC,MAAAA,UAAU,EAAE,CAHoB;AAIhCC,MAAAA,KAAK,EAAE;AAJyB,KAArB,CAAb;AAOAP,IAAAA,UAAU,CAACQ,EAAX,CAAc,QAAd,EAAwB,MAAM;AAC5Bd,MAAAA,aAAa,CAACe,MAAd;AACD,KAFD;AAIAf,IAAAA,aAAa,CAACgB,aAAd,CAA4BT,QAA5B,EAAsC;AACpCU,MAAAA,SAAS,CAACC,KAAD,EAAQ;AACf,YAAIZ,UAAJ,EAAgB;AACd,iBAAOa,SAAS,CAACC,MAAV,GACHd,UAAU,CAACe,QAAX,CAAoBH,KAApB,EAA2B,CAA3B,EAA8B,CAA9B,CADG,GAEHZ,UAAU,CAACgB,MAAX,CAAkBC,QAAlB,CAA2BD,MAA3B,CAAkCE,CAFtC;AAGD;;AACD,eAAO,IAAP;AACD,OARmC;;AASpCC,MAAAA,UAAU,CAACP,KAAD,EAAQ;AAChB,YAAIZ,UAAJ,EAAgB;AACd,iBAAOa,SAAS,CAACC,MAAV,GACHd,UAAU,CAACe,QAAX,CAAoBH,KAApB,EAA2B,CAA3B,EAA8B,CAA9B,CADG,GAEHZ,UAAU,CAACgB,MAAX,CAAkBC,QAAlB,CAA2BD,MAA3B,CAAkCI,CAFtC;AAGD;;AACD,eAAO,IAAP;AACD;;AAhBmC,KAAtC;;AAmBA,UAAMC,QAAQ,GAAG,MAAM;AACrB,UAAIrB,UAAJ,EAAgB;AACdA,QAAAA,UAAU,CAACS,MAAX;AACD;AACF,KAJD;;AAMAf,IAAAA,aAAa,CAAC4B,gBAAd,CAA+B,SAA/B,EAA0CD,QAA1C;AACA3B,IAAAA,aAAa,CAAC6B,OAAd;AAEA,WAAO,MAAM;AACX,UAAIvB,UAAJ,EAAgB;AACdN,QAAAA,aAAa,CAAC8B,mBAAd,CAAkC,SAAlC,EAA6CH,QAA7C;AACArB,QAAAA,UAAU,CAACyB,OAAX;AACAzB,QAAAA,UAAU,GAAG,IAAb;AACA0B,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB3B,UAApB;AACD;AACF,KAPD;AAQD,GArDQ,EAqDN,CAACD,KAAD,CArDM,CAAT;AAsDD;;GAvDuBD,a","sourcesContent":["import gsap from \"gsap\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\nimport { useEffect } from \"react\";\nimport LocomotiveScroll from \"locomotive-scroll\";\nimport \"locomotive-scroll/src/locomotive-scroll.scss\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default function useLocoScroll(start) {\n  useEffect(() => {\n    if (!start) return;\n    let locoScroll = null;\n\n    const scrollEl = document.querySelector(\"#main-container\");\n\n    locoScroll = new LocomotiveScroll({\n      el: scrollEl,\n      smooth: true,\n      multiplier: 1,\n      class: \"is-reveal\",\n    });\n\n    locoScroll.on(\"scroll\", () => {\n      ScrollTrigger.update();\n    });\n\n    ScrollTrigger.scrollerProxy(scrollEl, {\n      scrollTop(value) {\n        if (locoScroll) {\n          return arguments.length\n            ? locoScroll.scrollTo(value, 0, 0)\n            : locoScroll.scroll.instance.scroll.y;\n        }\n        return null;\n      },\n      scrollLeft(value) {\n        if (locoScroll) {\n          return arguments.length\n            ? locoScroll.scrollTo(value, 0, 0)\n            : locoScroll.scroll.instance.scroll.x;\n        }\n        return null;\n      },\n    });\n\n    const lsUpdate = () => {\n      if (locoScroll) {\n        locoScroll.update();\n      }\n    };\n\n    ScrollTrigger.addEventListener(\"refresh\", lsUpdate);\n    ScrollTrigger.refresh();\n\n    return () => {\n      if (locoScroll) {\n        ScrollTrigger.removeEventListener(\"refresh\", lsUpdate);\n        locoScroll.destroy();\n        locoScroll = null;\n        console.log(\"Kill\", locoScroll);\n      }\n    };\n  }, [start]);\n}\n"]},"metadata":{},"sourceType":"module"}