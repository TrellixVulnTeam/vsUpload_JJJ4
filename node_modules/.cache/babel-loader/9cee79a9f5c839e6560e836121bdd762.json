{"ast":null,"code":"import _defineProperty from\"/Users/stephensheldon/Documents/Coding/React/react-router-portfolio/router-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React,{useEffect,useRef,useState}from\"react\";import useOnScreen from\"../../hooks/useOnScreen\";import gsap from\"gsap\";import SplitText from\"../../utils/Split3.min\";import cn from\"classnames\";import{NavLink}from\"react-router-dom\";import\"./style.scss\";import SectionHeader from\"../SectionHeader/SectionHeader.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export function SectionMenuItem(_ref){var _jsxs2;var lineContent=_ref.lineContent,lineContent2=_ref.lineContent2,toPath=_ref.toPath;var ref=useRef(null);// const [reveal, setReveal] = useState(false);\n// const onScreen = useOnScreen(ref);\n// useEffect(() => {\n//   if (onScreen) setReveal(onScreen);\n// }, [onScreen]);\n// useEffect(()=>{\n//   const split = new SplitText(\"#sectionMenu\", {\n//     type: 'lines',\n//     linesClass: 'lineChildren'\n//   });\n//   gsap.to(split.lines, {\n//     duration: .5,\n//     y: 0,\n//     opacity: 1,\n//     stagger: 0.1,\n//     ease: 'power2',\n//   })\n// },[reveal]);\nreturn/*#__PURE__*/_jsx(\"div\",{className:cn(\"sectionMenuItem\"/* { \"is-reveal\": reveal } */),id:\"sectionMenuItem\",\"data-scroll-section\":true,children:/*#__PURE__*/_jsxs(NavLink,(_jsxs2={ref:ref,className:\"link link--elara\",to:toPath},_defineProperty(_jsxs2,\"className\",cn(\"link link--elara\")),_defineProperty(_jsxs2,\"activeStyle\",{fontWeight:\"bold\",color:\"#E07A5F\"}),_defineProperty(_jsxs2,\"children\",[/*#__PURE__*/_jsx(\"h1\",{id:\"section-menu-animate\",children:lineContent}),/*#__PURE__*/_jsx(\"h2\",{id:\"section-menu-animate\",children:lineContent2}),/*#__PURE__*/_jsx(\"p\",{id:\"section-menu-animate\",className:\"solid\"})]),_jsxs2))});}export default function SectionMenu(_ref2){var menuItems=_ref2.menuItems;useEffect(function(){var split=new SplitText(\"#section-menu-animate\",{type:'lines',linesClass:'lineChildren'});var line=new SplitText(\"#section-menu-animate\",{type:'lines',linesClass:'lineParent'});gsap.to(split.lines,{duration:.8,y:0,opacity:1,stagger:0.1,ease:'power2'});},[]);return/*#__PURE__*/_jsx(_Fragment,{children:menuItems.map(function(_ref3){var h1=_ref3.h1,h2=_ref3.h2,to=_ref3.to;return/*#__PURE__*/_jsx(SectionMenuItem,{lineContent:h1,lineContent2:h2,toPath:to},to);})});}","map":{"version":3,"sources":["/Users/stephensheldon/Documents/Coding/React/react-router-portfolio/router-portfolio/src/components/workMenu/index.jsx"],"names":["React","useEffect","useRef","useState","useOnScreen","gsap","SplitText","cn","NavLink","SectionHeader","SectionMenuItem","lineContent","lineContent2","toPath","ref","fontWeight","color","SectionMenu","menuItems","split","type","linesClass","line","to","lines","duration","y","opacity","stagger","ease","map","h1","h2"],"mappings":"6MAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,CAAmCC,QAAnC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CAGA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,EAAP,KAAe,YAAf,CACA,OAASC,OAAT,KAAwB,kBAAxB,CAGA,MAAO,cAAP,CACA,MAAOC,CAAAA,aAAP,KAA0B,mCAA1B,C,6IAKA,MAAO,SAASC,CAAAA,eAAT,MAAgE,eAArCC,CAAAA,WAAqC,MAArCA,WAAqC,CAAxBC,YAAwB,MAAxBA,YAAwB,CAAVC,MAAU,MAAVA,MAAU,CACrE,GAAMC,CAAAA,GAAG,CAAGZ,MAAM,CAAC,IAAD,CAAlB,CACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA,mBACE,YAAK,SAAS,CAAEK,EAAE,CAAC,iBAAmB,6BAApB,CAAlB,CACI,EAAE,CAAC,iBADP,CAEI,0BAFJ,uBAIM,MAAC,OAAD,UAAS,GAAG,CAAEO,GAAd,CACE,SAAS,CAAC,kBADZ,CAEE,EAAE,CAAED,MAFN,qCAGaN,EAAE,CAAC,kBAAD,CAHf,uCAIe,CACXQ,UAAU,CAAE,MADD,CAEXC,KAAK,CAAE,SAFI,CAJf,kDASE,WAAI,EAAE,CAAC,sBAAP,UAA+BL,WAA/B,EATF,cAUE,WAAI,EAAE,CAAC,sBAAP,UAA+BC,YAA/B,EAVF,cAWE,UAAG,EAAE,CAAC,sBAAN,CAA6B,SAAS,CAAC,OAAvC,EAXF,WAJN,EADF,CAoBD,CAMD,cAAe,SAASK,CAAAA,WAAT,OAAkC,IAAZC,CAAAA,SAAY,OAAZA,SAAY,CAG/CjB,SAAS,CAAC,UAAI,CACZ,GAAMkB,CAAAA,KAAK,CAAG,GAAIb,CAAAA,SAAJ,CAAc,uBAAd,CAAuC,CACnDc,IAAI,CAAE,OAD6C,CAEnDC,UAAU,CAAE,cAFuC,CAAvC,CAAd,CAKA,GAAMC,CAAAA,IAAI,CAAG,GAAIhB,CAAAA,SAAJ,CAAc,uBAAd,CAAuC,CAClDc,IAAI,CAAE,OAD4C,CAElDC,UAAU,CAAE,YAFsC,CAAvC,CAAb,CAKAhB,IAAI,CAACkB,EAAL,CAAQJ,KAAK,CAACK,KAAd,CAAqB,CACnBC,QAAQ,CAAE,EADS,CAEnBC,CAAC,CAAE,CAFgB,CAGnBC,OAAO,CAAE,CAHU,CAInBC,OAAO,CAAE,GAJU,CAKnBC,IAAI,CAAE,QALa,CAArB,EAOD,CAlBQ,CAkBP,EAlBO,CAAT,CAqBA,mBACE,yBACGX,SAAS,CAACY,GAAV,CAAc,mBAAGC,CAAAA,EAAH,OAAGA,EAAH,CAAOC,EAAP,OAAOA,EAAP,CAAWT,EAAX,OAAWA,EAAX,oBACb,KAAC,eAAD,EAA0B,WAAW,CAAEQ,EAAvC,CAA2C,YAAY,CAAEC,EAAzD,CAA6D,MAAM,CAAET,EAArE,EAAsBA,EAAtB,CADa,EAAd,CADH,EADF,CAOD","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport useOnScreen from \"../../hooks/useOnScreen\";\n\n\nimport gsap from \"gsap\";\nimport SplitText from \"../../utils/Split3.min\";\nimport cn from \"classnames\";\nimport { NavLink } from \"react-router-dom\";\n\n\nimport \"./style.scss\";\nimport SectionHeader from \"../SectionHeader/SectionHeader.js\";\n\n\n\n\nexport function SectionMenuItem({ lineContent, lineContent2, toPath }) {\n  const ref = useRef(null);\n  // const [reveal, setReveal] = useState(false);\n\n  // const onScreen = useOnScreen(ref);\n\n  // useEffect(() => {\n  //   if (onScreen) setReveal(onScreen);\n  // }, [onScreen]);\n  \n  // useEffect(()=>{\n  //   const split = new SplitText(\"#sectionMenu\", {\n  //     type: 'lines',\n  //     linesClass: 'lineChildren'\n  //   });\n\n\n  //   gsap.to(split.lines, {\n  //     duration: .5,\n  //     y: 0,\n  //     opacity: 1,\n  //     stagger: 0.1,\n  //     ease: 'power2',\n\n\n\n  //   })\n  // },[reveal]);\n\n\n\n  return (\n    <div className={cn(\"sectionMenuItem\", /* { \"is-reveal\": reveal } */)}\n        id=\"sectionMenuItem\"\n        data-scroll-section> \n\n          <NavLink ref={ref} \n            className=\"link link--elara\"\n            to={toPath}\n            className={cn(\"link link--elara\")}\n            activeStyle={{\n              fontWeight: \"bold\",\n              color: \"#E07A5F\",\n            }}\n          > \n            <h1 id=\"section-menu-animate\">{lineContent}</h1>\n            <h2 id=\"section-menu-animate\">{lineContent2}</h2>\n            <p id=\"section-menu-animate\" className=\"solid\"></p>\n          </NavLink>\n    </div>\n  )\n}\n\n\n\n\n\nexport default function SectionMenu({menuItems}) {\n\n\n  useEffect(()=>{\n    const split = new SplitText(\"#section-menu-animate\", {\n      type: 'lines',\n      linesClass: 'lineChildren'\n    });\n\n    const line = new SplitText(\"#section-menu-animate\", {\n      type: 'lines',\n      linesClass: 'lineParent'\n    })\n\n    gsap.to(split.lines, {\n      duration: .8,\n      y: 0,\n      opacity: 1,\n      stagger: 0.1,\n      ease: 'power2',\n    })\n  },[]);\n\n\n  return (\n    <>\n      {menuItems.map(({ h1, h2, to }) => (\n        <SectionMenuItem key={to} lineContent={h1} lineContent2={h2} toPath={to}/> \n      ))}\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}