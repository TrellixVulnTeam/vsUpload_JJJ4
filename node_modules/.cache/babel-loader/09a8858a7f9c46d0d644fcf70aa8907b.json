{"ast":null,"code":"var _jsxFileName = \"/Users/stephensheldon/Documents/Coding/React/react-router-portfolio/router-portfolio/src/components/Footer/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport useOnScreen from \"../../hooks/useOnScreen\";\nimport gsap from \"gsap\";\nimport SplitText from \"../../utils/Split3.min\";\nimport cn from \"classnames\";\nimport \"./style.scss\";\nimport SectionHeader from \"../SectionHeader/SectionHeader.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Footer() {\n  _s();\n\n  const ref = useRef(null);\n  const [reveal, setReveal] = useState(false);\n  const onScreen = useOnScreen(ref);\n  useEffect(() => {\n    if (onScreen) setReveal(onScreen);\n  }, [onScreen]);\n  useEffect(() => {\n    if (reveal) {\n      const split = new SplitText(\"#location-text\", {\n        type: 'lines',\n        linesClass: 'lineChildren'\n      });\n      const splitParent = new SplitText(\"#location-text\", {\n        type: 'lines',\n        linesClass: 'lineParent'\n      });\n      gsap.fromTo(split.lines, {\n        y: 200\n      }, {\n        duration: 1,\n        y: 0,\n        stagger: 0.1,\n        ease: 'power2'\n      });\n    }\n  }, [reveal]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"footer\",\n    \"data-scroll-section\": true,\n    children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n      title: \"Made in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: cn(\"location\", {\n        'is-reveal': reveal\n      }),\n      id: \"location-text\",\n      ref: ref,\n      children: \"Boston ma\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Footer, \"A34ViuF9v54GN9pr7R/DaTZJmbU=\", false, function () {\n  return [useOnScreen];\n});\n\n_c = Footer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"sources":["/Users/stephensheldon/Documents/Coding/React/react-router-portfolio/router-portfolio/src/components/Footer/index.jsx"],"names":["React","useEffect","useRef","useState","useOnScreen","gsap","SplitText","cn","SectionHeader","Footer","ref","reveal","setReveal","onScreen","split","type","linesClass","splitParent","fromTo","lines","y","duration","stagger","ease"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAO,cAAP;AACA,OAAOC,aAAP,MAA0B,mCAA1B;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAMC,GAAG,GAAGR,MAAM,CAAC,IAAD,CAAlB;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAE,KAAF,CAApC;AAEA,QAAMU,QAAQ,GAAGT,WAAW,CAACM,GAAD,CAA5B;AAEAT,EAAAA,SAAS,CAAC,MAAI;AAChB,QAAGY,QAAH,EAAaD,SAAS,CAACC,QAAD,CAAT;AACV,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAKAZ,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGU,MAAH,EAAU;AACV,YAAMG,KAAK,GAAG,IAAIR,SAAJ,CAAc,gBAAd,EAAgC;AAC5CS,QAAAA,IAAI,EAAE,OADsC;AAE5CC,QAAAA,UAAU,EAAE;AAFgC,OAAhC,CAAd;AAKA,YAAMC,WAAW,GAAG,IAAIX,SAAJ,CAAc,gBAAd,EAAgC;AAClDS,QAAAA,IAAI,EAAE,OAD4C;AAElDC,QAAAA,UAAU,EAAE;AAFsC,OAAhC,CAApB;AAKAX,MAAAA,IAAI,CAACa,MAAL,CAAYJ,KAAK,CAACK,KAAlB,EAAyB;AAACC,QAAAA,CAAC,EAAC;AAAH,OAAzB,EAAkC;AAChCC,QAAAA,QAAQ,EAAE,CADsB;AAEhCD,QAAAA,CAAC,EAAE,CAF6B;AAIhCE,QAAAA,OAAO,EAAE,GAJuB;AAKhCC,QAAAA,IAAI,EAAE;AAL0B,OAAlC;AAUD;AACA,GAvBQ,EAuBP,CAACZ,MAAD,CAvBO,CAAT;AA2BA,sBAAO;AAAS,IAAA,SAAS,EAAE,QAApB;AACP,+BADO;AAAA,4BAEL,QAAC,aAAD;AAAe,MAAA,KAAK,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,YAFK,eAGL;AAAI,MAAA,SAAS,EAAEJ,EAAE,CAAC,UAAD,EAAa;AAAC,qBAAaI;AAAd,OAAb,CAAjB;AAAsD,MAAA,EAAE,EAAC,eAAzD;AAAyE,MAAA,GAAG,EAAED,GAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKD;;GA3CuBD,M;UAILL,W;;;KAJKK,M","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport useOnScreen from \"../../hooks/useOnScreen\";\n\nimport gsap from \"gsap\";\nimport SplitText from \"../../utils/Split3.min\";\nimport cn from \"classnames\";\n\nimport \"./style.scss\";\nimport SectionHeader from \"../SectionHeader/SectionHeader.js\";\n\nexport default function Footer() {\n  const ref = useRef(null); \n  const [reveal, setReveal] = useState (false);\n\n  const onScreen = useOnScreen(ref);\n\n  useEffect(()=>{\nif(onScreen) setReveal(onScreen);\n  }, [onScreen])\n\n\n  useEffect(()=>{\n    if(reveal){\n    const split = new SplitText(\"#location-text\", {\n      type: 'lines',\n      linesClass: 'lineChildren'\n    });\n\n    const splitParent = new SplitText(\"#location-text\", {\n      type: 'lines',\n      linesClass: 'lineParent'\n    })\n\n    gsap.fromTo(split.lines, {y:200}, {\n      duration: 1,\n      y: 0,\n     \n      stagger: 0.1,\n      ease: 'power2',\n \n\n\n    })\n  }\n  },[reveal]);\n\n\n\n  return <section className={\"footer\"}\n  data-scroll-section> \n    <SectionHeader title=\"Made in\" />\n    <h1 className={cn(\"location\", {'is-reveal': reveal})} id=\"location-text\" ref={ref}>Boston ma</h1>\n  </section>\n}\n"]},"metadata":{},"sourceType":"module"}